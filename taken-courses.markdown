---
title: 修課心得
---

Ctrl-F 可以快速的找到課程名稱。如果有你認為寫的不對的內容，或者想問我更詳細的經驗或考古題之類的資源，可以用首頁的聯絡資訊寄信給我。

目前還在逐漸補完中——最後更新日期：2022-07-04

<!--
### 課程名稱
- 修課學期：
- 授課教師：
- 成績等第：

#### 課程內容

#### 感想

-->

## 必修
### 作業系統
- 修課學期：大二下
- 授課教師：施吉昇、林忠緯
- 成績等第：A+

#### 課程內容
這門課介紹作業系統的基礎知識，上課就是介紹 Operating system concepts 的 1 到 7 還有 9 到 15 章（不過順序有調整）。這學期因為疫情，前半是實體上課，後半看預錄影片，在上課時間線上 office hour。另外這學期是單雙班作業跟考題都相同，所以可以選自己喜歡的老師聽課；我上學期是去施吉昇班，但後來發現林忠緯班教的好像比較快，而且後來的影片也比較短，所以就改聽那邊了。

作業是參考 MIT 的 [xv6](https://pdos.csail.mit.edu/6.S081/2020/xv6.html)，要寫 C 實作一些作業系統的功能，例如實作 threading、demand paging、symbolic link 等等；第一次上課就公佈 MP0，讓選課的人可以看看自己 C 跟系統程式夠不夠熟悉。

期中期末是線上考試，除了不能討論以外，可以參考任何資料。題目有不少是要按照定義進行操作的，例如算 working set、page table 需要的空間、shortest job first scheduling 的 waiting time 等等，基本上查投影片或課本都能查到。雖然有些題目的敘述不太清楚，或出的怪怪的，但只要有好好反應應該都能要到分數。

如果平時有在討論區上幫助其他同學，可以把證據附在最後一次作業，聽說在等第線邊緣的人有機會根據幫助同學的順序被調高。

#### 感想
我覺得這門課讓我深刻感受到自己對 C 熟悉度還不夠，常常要讀很久才能看懂一段 xv6 裡面的程式碼到底在做什麼。還有非常建議可以用 git 來版本控制作業的 code，我有幾次手殘不小心刪到東西，還有不小心把本來對的 code 改成錯的，都是有 git 才免於重寫的。此外，因為作業的公開測資都很弱，所以就算過了也不能保證實作的是對的，特別感謝 [Vincent Pao](https://github.com/vppyw) 提供的測資幫我抓到不少寫錯的地方。

這門課的作業佔 44%，也有聽說很多同學發生交錯檔案、忘記註解掉 debug 訊息的慘案，所以交作業一定要小心檢查。

如果想瞭解作業系統的結構，而且想要親手調整、實作作業系統的功能的話，可以嘗試看看這門課。

### 機率
- 修課學期：大二下
- 授課教師：林守德
- 成績等第：A+

#### 課程內容
這門課介紹一些基礎的機率的概念、常見機率分佈、基礎的統計檢定等等。作業應該只看有沒有寫，有寫就滿分。期中期末考前會發考古題。老師上課的時候偶爾會講一些冷笑話，還有期中期末考如果可以拿到滿分 120 分當中的 100 分以上的話，好像可以去吃老師的導生宴。

#### 感想
我覺得我的機率沒有學得很好，對我來說上課的速度有點快，常常跟不太上，但因為考試跟考古題、作業的重複還不少，把出現過的題目搞清楚之後成績意外的還可以。裡面有用到一些基礎的積分，說不定跟微積分一起修是比較好的選擇。

### 人工智慧導論
- 修課學期：大二下
- 授課教師：陳尚澤、林軒田
- 成績等第：A+

#### 課程內容
課程前半由陳尚澤老師講授。內容有點像 [Berkeley CS188](https://inst.eecs.berkeley.edu/~cs188/sp21/) 大約前 1/3 到 1/2 的內容，就是簡介人工智慧的定義還有實現它的一些方法。老師似乎對這些內容不太熟悉，所以上課的時候會有點卡卡的，如果在意課程的流暢度，可以看看 CS188 的上課錄影。作業有分手寫跟程式題，手寫題是大多是推演 A\* search 和 Minimax 這種練習定義的題目。程式作業一是實作讓小精靈用最短路徑吃到所有食物，作業二是要寫一個 agent 來玩有鬼魂的狀態的小精靈，遊戲的分數似乎會隨著時間降低，吃到食物或鬼魂會加分，贏得遊戲會有額外的分數。玩幾場遊戲的分數達到某個標準就能拿到滿分。期中考考的跟作業差不多，應該只要把定義記熟就差不多了。

課程的後半由林軒田老師講授。內容跟老師開的機器學習有點像，不過題材有些不太一樣。作業也分為手寫跟程式。手寫題是運用簡單的微分、矩陣計算來推導一些公式，或者實際操作公式，例如給定一個 cost matrix 和錯誤率，找出怎麼分配分類錯誤的例子可以達到最高跟最低的 cost。程式作業一是實作決策樹，作業二是實作 PCA、autoencoder 做 feature extraction；作業都會有骨架，只要把實作的細節補上去就好。

這門課沒有期末考，取而代之的是期末專案：德州撲克 AI。說明可以看[投影片](https://docs.google.com/presentation/d/1HniTU4ZmVL8mTslf5zpThVG7LMT___iJ5AQSteFudn4/)，基本上就是要根據檯面上已知的情報判斷應該放棄、跟還是加注。跟作業一樣有骨架的程式碼。AI 只要能夠贏過 baseline 就能拿到 30%，書面報告佔 60%，剩下 10% 是每六個人被分成一組，也就是每個人會跟五個人對戰，每贏一個人就得到 2% 的分數。

#### 感想
這門課可能是第一次開設，所以有些不太完整的地方：期中考前最後一次上課時，老師說他覺得最後的內容他還沒整理清楚，會另外錄影上傳，不過一直到現在，那部影片都還沒出現。前半的作業內容似乎直接拿作業內文好像就能查到類似的作業：手寫散佈在很多地方，程式題則是 CS188 的程式作業，如果想不到怎麼做，直接拿內文複製，也許有意料不到的驚喜，像作業一的某個小題我想不到可以怎麽優化，查了之後發現有學校這份作業有提供更詳細的提示，採用了之後就做出來了！後半的內容感覺就比較完善了。

期末專案是我比較驚訝的地方。我找到 [PyPokerEngine](https://github.com/ishikota/PyPokerEngine) 這個 repo，發現骨架的程式碼跟它差不多，但是沒有給蒙地卡羅模擬，所以我就直接去把那個函式挖出來，用來估手牌的勝率，再直接設定跟還有加注的閾值，就能夠贏過 baseline 了，甚至在跟其他人的 AI 中五場贏了四場。本以為用這種沒有 ML 的方法 report 分數會很低，但助教大發慈悲給了我大約 90% 的 report 分數，結果期末專案竟然有拿到還不錯的分數。

總之沒有特別推薦這門課，如果是對機器學習以外的 AI 有興趣的話，去看 CS188 可能是比較好的選擇。


## 系內選修

### 安全程式開發簡介
- 修課學期：大二下
- 授課教師：來自趨勢科技的講師
- 成績等第：A+

#### 授課內容
這是密集課程，只有六週，成績由全選擇題的期考決定，要稍微背一些上課內容，平時上課回答問題或做作業可以加分。

第一個講師講的是軟體測試，介紹了單元測試、Test Driven Development 的概念，還有讓同學用 TDD 的方式寫一個 C# 的程式。

接著是雲端安全，講師分享了很多雲端服務的安全觀念，還有帶大家練習操作 AWS immersion day。

最後是網頁安全，練習 [Secure Coding Dojo](https://securecodingdojo.owasp.org/public/index.html)，透過它認識 OWASP top 10 常見網頁安全漏洞。

#### 感想
這門課可以聽到業界的說法，也有實際操作的內容，滿有趣的。加分作業很多都是上課期間就能做出來的，幾乎不會用到課外時間，應該是很輕鬆的課。唯一的抱怨就是這門課用到的東西需要 Visual Studio，我不想裝在自己的的電腦上，所以用 204 電腦，但有些電腦容量滿到安裝 Visual Studio extension 的時候就會重開雞，有點困擾。

### 前瞻資訊科技二
- 修課學期：大二下
- 授課教師：陳縕儂、李彥寰、蔡欣穆、施吉昇、廖世偉、曾宇鳳、陳尚澤、陳祝嵩
- 成績等第：A+

#### 課程內容
各個授課的教師會分享他們的研究領域，還有出一些跟上課內容相關的作業。每次開設的教師不一定相同，這學期的內容大概是：

- 李彥寰：統計學習、線上學習
- 蔡欣穆：車輛網路、可見光通訊
- 施吉昇：物聯網、autonomous systems
- 廖世偉：DeFi、NFT
- 曾宇鳳：生物資訊、computational chemistry
- 陳尚澤：機器學習安全和隱私
- 陳祝嵩：機器學習在影像方面的應用

#### 感想
可以在一門課看到很多不同的領域，而且作業大多都滿輕鬆的，成績應該也算甜吧？推薦給需要填充課表的資工系同學。


### 進階網路管理與系統管理
- 修課學期：大二下
- 授課教師：蕭旭君、陳尚澤
- 成績等第：A-

#### 課程內容
這門課又稱為 NASA 三階，是修過 NASA 一階之後想進入資工系 NASA 團隊的同學的下一步的課程。雖說是開在系選修的課程，但是其實沒有上課，而是要熟悉自己的組別的工作，每週參加 NASA 週會，還有做一個可以幫助 NASA 團隊的專案，並且在期末報告。學期中有幾週有 slackbot 和電子郵件的回信訓練。

#### 感想
沒有特別的感想……，基本上就是成為 NASA 成員的必經之路。


## 一般選修

### 程式語言：函數程式設計 
- 修課學期：大二下
- 授課教師：穆信成
- 成績等第：A+

#### 課程內容
資管系選修。這門課會介紹 functional programming，以下簡稱 FP。在 FP 當中，程式並不是執行指令而是化簡一個表達式（例如：`5 * (4 + 3)^2 => 5 * 7^2 => 5 * 49 => 245`），而且函式和其他的值相同，都可以傳進函式、從函式回傳等等，鼓勵以函式為單位的模組化設計。另外這門課介紹的 Haskell 是一個 pure functional language，一個 pure 的語言要求程式中的函式像是數學中的函數，不會存取狀態（例如 C 當中的 random，給相同的輸入卻會有不同輸出），也不會進行回傳值以外的操作（比如 C 常常會傳入指標然後修改指標指向的值）。對函式做了這些限制之後，我們就更容易推論它們具有的性質，比如可以運用 program calculation 的技巧，從一個比較慢的函式算出比較快但是會計算出一樣的結果但效率更高的函式，此外 FP 還有許多的特點，例如積極的抽象化：透過抽象化，我們可以一次證明許多看似不同的結構的性質，以及設計可以重複用在非常多地方的函式。對於 FP 和這門課用到的其中一個程式語言—— [Haskell](haskell.org/) 的簡單介紹，可以參考 UPenn 的 [CIS194](https://www.cis.upenn.edu/~cis1940/spring13/lectures/01-intro.html)。

課程的最後簡單介紹了 type theory，引入了 proposition as types 的概念：我們可以把數學中的命題寫成型別，命題的證明寫成該型別的程式。這讓確認數學證明的正確性的問題轉變為程式的型別檢查，可能可以避免一些紙筆證明可能發生的錯誤。這裡也介紹了 [Agda](https://github.com/agda/agda)。它擁有比較厲害的型別系統，可以寫出給定一個 List，回傳排序好的 List 這種型別。

這學期因為是小班教學，上課方式可能和以往不太一樣：老師會講一些概念，讓同學練習題目，練習時老師會走來走去看同學有沒有問題，等大家大致完成，老師再邊請同學回答問題，一邊把做法寫在白板或程式碼編輯器上。

期中考的考試題目大多是要寫歸納法證明或做 program calculation。期末考因為是線上考試，改成要我們完成一份 Haskell 跟一份 Agda 的檔案，Haskell 的部分大多跟期中考相同，不過多了畫 natural deduction 的證明樹。Agda 則是要寫出符合型別的程式（也就是命題的證明），基本上寫出來就知道是對的了。

#### 感想
我覺得很有趣的事情是，FP 這種方法一開始雖然不太習慣，但是寫一段時間之後會上癮，回去看 C 或 Python 的時候會懷疑以前怎麽有辦法寫這種東西——這麼說也許有點誇張了，不過它確實是大大的開闊了我的眼界。這門課花比較多時間講怎麽證明程式的正確性，所以其實對於 Haskell 本身的介紹比較少（甚至沒有講到 monad 跟 IO），不過它應該是個不錯的起點，可以從這裡再去探索 Haskell 的各種結構（monoid、functor、monad……）還有 laziness、pureness 在證明正確性以外的地方可以發揮什麼效果。

以上可能看起來都像業配文，這邊說一下像 loading 或考試難度之類的想法好了：作業不會收，不過可以寄給老師請老師改，他也有把答案放在[課程網頁](https://scmu.github.io/plfp/)上（課程網頁好像常常會有變化，如果找不到可以在 archive.org 上找 2022-06 左右的 snapshot），如果都寫的出來的話，考試應該就沒問題了。我認為這是一門不可多得的甜涼卻學得到很多東西的好課。另外，老師人很好，可以多找老師聊天或問一些延伸的東東。


### 密碼學導論
- 修課學期：大二下
- 授課教師：陳君明
- 成績等第：A+

#### 課程內容
數學系選修。介紹密碼學的基礎，幾乎講完了上課用書：Understanding Cryptography。從對稱式密碼學到公鑰密碼學都有介紹，還另外介紹了一些像是旁通道攻擊、區塊鏈、後量子密碼學等等主題。數學的部分大概一半是看錄好的影片自己學，會用到非常基本的代數跟數論，大部分的證明應該都不用會，只要會用結果就好。上課會穿插一些有趣的八卦，老師說出了教室他都不會承認他有講過這些話。

作業有課本習題、實際寫 sage 的程式來操作 ECDSA，還有看一些影片的心得，不要亂寫應該可以拿到滿分吧？

期中期末考的題目主要有這兩種：

- 計算題：用上課教的數學工具來算一些東西，比如計算某個乘法群的元素個數、用擴展歐幾里得算多項式的反元素等等。
- 背誦題：哪些 mode of operation 不會用到 block cipher 的 decipher 運算？key-whitening 比較不能抵檔哪種攻擊？

大多的題目都跟考古題差不多，建議可以早一點開始刷題目，比較容易知道要記哪些東西，還有遇到不會算的題目的時候比較有時間可以問同學或助教（考試前一週助教時間人變得有點多）。

#### 感想
這門課效率相當高，考完試當天就公佈解答，（如果有在題目卷上寫答案）馬上就會知道自己成績這點滿不錯的。我覺得這門課的用到的數學應該不難，就算沒辦法在第一次聽就馬上理解，刷刷考古題再問一下厲害的助教應該就能弄懂。我是期中期末都刷了四份考古題，最後期中 98 期末 98.5。

順帶一提，資工系修課人數是各系所中最多的（期中考 158 人中的 55 人是資工系的），簡直就像資工系選修一樣。

這門課上課時不時會講一些有趣的案例，像是 PS3 ECDSA 簽章用了固定的 nonce 導致密鑰被破解，這個概念就有出現在 [2022 AIS3-preexam](https://github.com/maple3142/My-CTF-Challenges/tree/master/AIS3%20Pre-exam%202022/shamiko) 中，可以應用上課學到的內容，感覺滿有成就感的。有這門課的基礎在看其他的密碼學的資料的時候就比較容易進入狀態，知道要注意哪些部分。

這門課推薦給不排斥數學，想要對密碼學有基礎認識，或者喜歡聽八卦的人！


## 體育

### 太極拳初級
- 修課學期：大二下
- 授課教師：施登堯
- 成績等第：A+

#### 課程內容
基本上就是教大家太極拳的動作，本來期末的時候應該是個人在課堂上跟著口訣的音檔打上課有教過的部分（大約五分鐘的長度），不過這次因為疫情變成是錄影傳給老師。

#### 感想
算是很輕鬆的體育課吧？不過老師的動作跟老師給的影片上的有很多不同的地方，建議可以錄下來方便練習時參考。


## 通識、國文

### 哲學概論
- 修課學期：大二下
- 授課教師：楊植勝
- 成績等第：B+

#### 課程內容
上課用書是 The Deepest Human Life: An Introduction to Philosophy for Everyone，這是一本滿有趣也滿好讀的書，就算沒上課也可以買來看看。上課就是老師逐字逐句的講解書的內容，時不時補充一些書中出現的哲學家或思想的背景。老師常常會挑中文版的翻譯錯誤，還有強調哲學並不是搬弄學說、主義的學問。

這學期的作業有三次，前兩次是閱讀跟上課內容有關的指定著作或文章，並且回答一些問題，例如：請解釋「疏離（Alienation，又名『異化』）」的概念與「資本主義是一種自我毀滅式的經濟制度」的主張。最後一次的作業是要找到一個哲學家或哲學思想，並且連結到這門課的核心主題——哲學之用。我覺得助教要求的重點是解釋清晰，如果有充分舉例的話似乎會比較高分。

考試可以帶紙本資料，問題的類型跟考試類似，只是閱讀的內容通常都在上課用書裡面，所以如果上課時有看過應該很快就能進入狀態。

#### 感想
我覺得這門課上課滿輕鬆的，因為老師講的速度有點慢，我通常都是邊聽課邊寫別的課的作業。不過不知道是不是我愜意過頭了，最後一次作業寫完之後又花了好幾天慢慢修改編輯，沒注意到截止期限，結果就被送下去了……

如果不想要討論，只想舒舒服服的聽故事的話，推薦這門課。
